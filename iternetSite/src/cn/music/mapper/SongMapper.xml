<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.music.mapper.SongMapper" >
  <resultMap id="BaseResultMap" type="cn.music.po.Song" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="theme" property="theme" jdbcType="VARCHAR" />
    <result column="album_id" property="albumId" jdbcType="INTEGER" />
    <result column="path" property="path" jdbcType="VARCHAR" />
    <result column="img" property="img" jdbcType="VARCHAR" />
    <result column="lrc_path" property="lrcPath" jdbcType="VARCHAR" />
    <result column="playNum" property="playnum" jdbcType="INTEGER" />
    <result column="downloadNum" property="downloadnum" jdbcType="INTEGER" />
    <result column="song_csid" property="songCsid" jdbcType="INTEGER" />
    <result column="createTime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="updateTime" property="updatetime" jdbcType="TIMESTAMP" />
    <result column="singer_id" property="singerId" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="cn.music.po.Song" extends="BaseResultMap" >
    <result column="lrc_content" property="lrcContent" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, theme, album_id, path, img, lrc_path, playNum, downloadNum, song_csid, 
    createTime, updateTime, singer_id
  </sql>
  <sql id="Blob_Column_List" >
    lrc_content
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="cn.music.po.SongExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from song
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.music.po.SongExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from song
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from song
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from song
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.music.po.SongExample" >
    delete from song
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.music.po.Song" >
    insert into song (id, name, theme, 
      album_id, path, img, 
      lrc_path, playNum, downloadNum, 
      song_csid, createTime, updateTime, 
      singer_id, lrc_content)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{theme,jdbcType=VARCHAR}, 
      #{albumId,jdbcType=INTEGER}, #{path,jdbcType=VARCHAR}, #{img,jdbcType=VARCHAR}, 
      #{lrcPath,jdbcType=VARCHAR}, #{playnum,jdbcType=INTEGER}, #{downloadnum,jdbcType=INTEGER}, 
      #{songCsid,jdbcType=INTEGER}, #{createtime,jdbcType=TIMESTAMP}, #{updatetime,jdbcType=TIMESTAMP}, 
      #{singerId,jdbcType=INTEGER}, #{lrcContent,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.music.po.Song" >
    insert into song
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="theme != null" >
        theme,
      </if>
      <if test="albumId != null" >
        album_id,
      </if>
      <if test="path != null" >
        path,
      </if>
      <if test="img != null" >
        img,
      </if>
      <if test="lrcPath != null" >
        lrc_path,
      </if>
      <if test="playnum != null" >
        playNum,
      </if>
      <if test="downloadnum != null" >
        downloadNum,
      </if>
      <if test="songCsid != null" >
        song_csid,
      </if>
      <if test="createtime != null" >
        createTime,
      </if>
      <if test="updatetime != null" >
        updateTime,
      </if>
      <if test="singerId != null" >
        singer_id,
      </if>
      <if test="lrcContent != null" >
        lrc_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="theme != null" >
        #{theme,jdbcType=VARCHAR},
      </if>
      <if test="albumId != null" >
        #{albumId,jdbcType=INTEGER},
      </if>
      <if test="path != null" >
        #{path,jdbcType=VARCHAR},
      </if>
      <if test="img != null" >
        #{img,jdbcType=VARCHAR},
      </if>
      <if test="lrcPath != null" >
        #{lrcPath,jdbcType=VARCHAR},
      </if>
      <if test="playnum != null" >
        #{playnum,jdbcType=INTEGER},
      </if>
      <if test="downloadnum != null" >
        #{downloadnum,jdbcType=INTEGER},
      </if>
      <if test="songCsid != null" >
        #{songCsid,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="singerId != null" >
        #{singerId,jdbcType=INTEGER},
      </if>
      <if test="lrcContent != null" >
        #{lrcContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.music.po.SongExample" resultType="java.lang.Integer" >
    select count(*) from song
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update song
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.theme != null" >
        theme = #{record.theme,jdbcType=VARCHAR},
      </if>
      <if test="record.albumId != null" >
        album_id = #{record.albumId,jdbcType=INTEGER},
      </if>
      <if test="record.path != null" >
        path = #{record.path,jdbcType=VARCHAR},
      </if>
      <if test="record.img != null" >
        img = #{record.img,jdbcType=VARCHAR},
      </if>
      <if test="record.lrcPath != null" >
        lrc_path = #{record.lrcPath,jdbcType=VARCHAR},
      </if>
      <if test="record.playnum != null" >
        playNum = #{record.playnum,jdbcType=INTEGER},
      </if>
      <if test="record.downloadnum != null" >
        downloadNum = #{record.downloadnum,jdbcType=INTEGER},
      </if>
      <if test="record.songCsid != null" >
        song_csid = #{record.songCsid,jdbcType=INTEGER},
      </if>
      <if test="record.createtime != null" >
        createTime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatetime != null" >
        updateTime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.singerId != null" >
        singer_id = #{record.singerId,jdbcType=INTEGER},
      </if>
      <if test="record.lrcContent != null" >
        lrc_content = #{record.lrcContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update song
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      theme = #{record.theme,jdbcType=VARCHAR},
      album_id = #{record.albumId,jdbcType=INTEGER},
      path = #{record.path,jdbcType=VARCHAR},
      img = #{record.img,jdbcType=VARCHAR},
      lrc_path = #{record.lrcPath,jdbcType=VARCHAR},
      playNum = #{record.playnum,jdbcType=INTEGER},
      downloadNum = #{record.downloadnum,jdbcType=INTEGER},
      song_csid = #{record.songCsid,jdbcType=INTEGER},
      createTime = #{record.createtime,jdbcType=TIMESTAMP},
      updateTime = #{record.updatetime,jdbcType=TIMESTAMP},
      singer_id = #{record.singerId,jdbcType=INTEGER},
      lrc_content = #{record.lrcContent,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update song
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      theme = #{record.theme,jdbcType=VARCHAR},
      album_id = #{record.albumId,jdbcType=INTEGER},
      path = #{record.path,jdbcType=VARCHAR},
      img = #{record.img,jdbcType=VARCHAR},
      lrc_path = #{record.lrcPath,jdbcType=VARCHAR},
      playNum = #{record.playnum,jdbcType=INTEGER},
      downloadNum = #{record.downloadnum,jdbcType=INTEGER},
      song_csid = #{record.songCsid,jdbcType=INTEGER},
      createTime = #{record.createtime,jdbcType=TIMESTAMP},
      updateTime = #{record.updatetime,jdbcType=TIMESTAMP},
      singer_id = #{record.singerId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.music.po.Song" >
    update song
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="theme != null" >
        theme = #{theme,jdbcType=VARCHAR},
      </if>
      <if test="albumId != null" >
        album_id = #{albumId,jdbcType=INTEGER},
      </if>
      <if test="path != null" >
        path = #{path,jdbcType=VARCHAR},
      </if>
      <if test="img != null" >
        img = #{img,jdbcType=VARCHAR},
      </if>
      <if test="lrcPath != null" >
        lrc_path = #{lrcPath,jdbcType=VARCHAR},
      </if>
      <if test="playnum != null" >
        playNum = #{playnum,jdbcType=INTEGER},
      </if>
      <if test="downloadnum != null" >
        downloadNum = #{downloadnum,jdbcType=INTEGER},
      </if>
      <if test="songCsid != null" >
        song_csid = #{songCsid,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        updateTime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="singerId != null" >
        singer_id = #{singerId,jdbcType=INTEGER},
      </if>
      <if test="lrcContent != null" >
        lrc_content = #{lrcContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.music.po.Song" >
    update song
    set name = #{name,jdbcType=VARCHAR},
      theme = #{theme,jdbcType=VARCHAR},
      album_id = #{albumId,jdbcType=INTEGER},
      path = #{path,jdbcType=VARCHAR},
      img = #{img,jdbcType=VARCHAR},
      lrc_path = #{lrcPath,jdbcType=VARCHAR},
      playNum = #{playnum,jdbcType=INTEGER},
      downloadNum = #{downloadnum,jdbcType=INTEGER},
      song_csid = #{songCsid,jdbcType=INTEGER},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      updateTime = #{updatetime,jdbcType=TIMESTAMP},
      singer_id = #{singerId,jdbcType=INTEGER},
      lrc_content = #{lrcContent,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.music.po.Song" >
    update song
    set name = #{name,jdbcType=VARCHAR},
      theme = #{theme,jdbcType=VARCHAR},
      album_id = #{albumId,jdbcType=INTEGER},
      path = #{path,jdbcType=VARCHAR},
      img = #{img,jdbcType=VARCHAR},
      lrc_path = #{lrcPath,jdbcType=VARCHAR},
      playNum = #{playnum,jdbcType=INTEGER},
      downloadNum = #{downloadnum,jdbcType=INTEGER},
      song_csid = #{songCsid,jdbcType=INTEGER},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      updateTime = #{updatetime,jdbcType=TIMESTAMP},
      singer_id = #{singerId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>